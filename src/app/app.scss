// http://ionicframework.com/docs/theming/


// App Global Sass
// --------------------------------------------------
// Put style rules here that you want to apply globally. These
// styles are for the entire app and not just one component.
// Additionally, this file can be also used as an entry point
// to import other Sass files to be included in the output CSS.
//
// Shared Sass variables, which can be used to adjust Ionic's
// default Sass variables, belong in "theme/variables.scss".
//
// To declare rules for a specific mode, create a child rule
// for the .md, .ios, or .wp mode classes. The mode class is
// automatically applied to the <body> element in the app.


.toolbar {
    .toolbar-title {
        color: white;
    }
    .button-inner {
        color: white;
    }
    .toolbar-background {
        background: map-get($colors, primary);
    }
}

// https://github.com/ionic-team/ionic/issues/16780
// TODO: fixed in ionic-angular 3.9.3
ion-content {
  contain: size style;
}

// adds classes hidden-* for each responsive size that hides elements for this screen size only.
$breakpoints-keys: map-keys($grid-breakpoints);
$breakpoints-values: map-values($grid-breakpoints);
@for $i from 1 to length($breakpoints-keys)+1 {
  @if $i < length($breakpoints-keys) {
    .hidden-#{nth($breakpoints-keys, $i)} {
      @media (min-width: nth($breakpoints-values, $i)) and (max-width: #{nth($breakpoints-values, $i+1) - 1}) {
        display: none !important;
      }
    }
  } @else {
    .hidden-#{nth($breakpoints-keys, $i)} {
      @media (min-width: nth($breakpoints-values, $i)) {
        display: none !important;
      }
    }
  }
}
